[{"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\index.js":"1","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\App.js":"2","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\components\\Footer.jsx":"3","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\components\\Header.jsx":"4","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\screens\\HomeScreen.jsx":"5","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\products.js":"6","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\screens\\ProductScreen.jsx":"7","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\components\\Rating.jsx":"8","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\screens\\ProductDetails.jsx":"9","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\store.js":"10","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\reducers\\productReducer.js":"11","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\constants\\productContant.js":"12","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\actions\\productActions.js":"13","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\components\\shared\\Loader.jsx":"14","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\components\\shared\\Message.jsx":"15","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\reducers\\cartReducer.js":"16","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\constants\\cartConstant.js":"17","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\screens\\CartScreen.jsx":"18","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\actions\\cartAction.js":"19","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\reducers\\userReducer.js":"20","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\constants\\userConstant.js":"21","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\screens\\LoginScreen.jsx":"22","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\actions\\userAction.js":"23","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\components\\shared\\FormContainer.jsx":"24","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\screens\\RegisterScreen.jsx":"25","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\screens\\ProfileScreen.jsx":"26","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\screens\\ShippingScreen.jsx":"27","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\components\\shared\\CheckoutStep.jsx":"28","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\screens\\PaymentScreen.jsx":"29","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\reducers\\orderReducer.js":"30","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\constants\\orderConstant.js":"31","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\screens\\PlaceOrderScreen.jsx":"32","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\actions\\orderAction.js":"33","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\screens\\OrderScreen.jsx":"34"},{"size":316,"mtime":1667564496850,"results":"35","hashOfConfig":"36"},{"size":1622,"mtime":1668499829558,"results":"37","hashOfConfig":"36"},{"size":414,"mtime":1667212711452,"results":"38","hashOfConfig":"36"},{"size":1900,"mtime":1668076769571,"results":"39","hashOfConfig":"36"},{"size":1022,"mtime":1667804398855,"results":"40","hashOfConfig":"36"},{"size":2520,"mtime":1667287063740,"results":"41","hashOfConfig":"36"},{"size":919,"mtime":1667287351676,"results":"42","hashOfConfig":"36"},{"size":1028,"mtime":1667220431289,"results":"43","hashOfConfig":"36"},{"size":3051,"mtime":1667810845583,"results":"44","hashOfConfig":"36"},{"size":1776,"mtime":1668602652751,"results":"45","hashOfConfig":"36"},{"size":1035,"mtime":1667807757777,"results":"46","hashOfConfig":"36"},{"size":372,"mtime":1667806482731,"results":"47","hashOfConfig":"36"},{"size":1089,"mtime":1667807000488,"results":"48","hashOfConfig":"36"},{"size":350,"mtime":1667804122851,"results":"49","hashOfConfig":"36"},{"size":242,"mtime":1667804301326,"results":"50","hashOfConfig":"36"},{"size":1178,"mtime":1668408559412,"results":"51","hashOfConfig":"36"},{"size":244,"mtime":1668408274838,"results":"52","hashOfConfig":"36"},{"size":3356,"mtime":1667987580804,"results":"53","hashOfConfig":"36"},{"size":1254,"mtime":1668408503571,"results":"54","hashOfConfig":"36"},{"size":2322,"mtime":1668606744129,"results":"55","hashOfConfig":"36"},{"size":921,"mtime":1668605706391,"results":"56","hashOfConfig":"36"},{"size":2148,"mtime":1668077577503,"results":"57","hashOfConfig":"36"},{"size":3886,"mtime":1668606974481,"results":"58","hashOfConfig":"36"},{"size":361,"mtime":1668067606878,"results":"59","hashOfConfig":"36"},{"size":3073,"mtime":1668084143031,"results":"60","hashOfConfig":"36"},{"size":5503,"mtime":1668604824015,"results":"61","hashOfConfig":"36"},{"size":2344,"mtime":1668410103906,"results":"62","hashOfConfig":"36"},{"size":1448,"mtime":1668409834161,"results":"63","hashOfConfig":"36"},{"size":1485,"mtime":1668410390274,"results":"64","hashOfConfig":"36"},{"size":2355,"mtime":1668606056089,"results":"65","hashOfConfig":"36"},{"size":820,"mtime":1668605573853,"results":"66","hashOfConfig":"36"},{"size":5297,"mtime":1668596742271,"results":"67","hashOfConfig":"36"},{"size":3375,"mtime":1668602949389,"results":"68","hashOfConfig":"36"},{"size":6561,"mtime":1668596848446,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1qs15ad",{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"72"},"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\index.js",[],["143","144"],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\App.js",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\components\\Footer.jsx",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\components\\Header.jsx",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\screens\\HomeScreen.jsx",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\products.js",[],["145","146"],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\screens\\ProductScreen.jsx",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\components\\Rating.jsx",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\screens\\ProductDetails.jsx",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\store.js",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\reducers\\productReducer.js",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\constants\\productContant.js",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\actions\\productActions.js",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\components\\shared\\Loader.jsx",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\components\\shared\\Message.jsx",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\reducers\\cartReducer.js",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\constants\\cartConstant.js",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\screens\\CartScreen.jsx",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\actions\\cartAction.js",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\reducers\\userReducer.js",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\constants\\userConstant.js",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\screens\\LoginScreen.jsx",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\actions\\userAction.js",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\components\\shared\\FormContainer.jsx",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\screens\\RegisterScreen.jsx",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\screens\\ProfileScreen.jsx",["147","148"],"import React,{ useEffect,useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Form,Button,Row,Col, Table} from 'react-bootstrap';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport Message from '../components/shared/Message';\r\nimport Loader from '../components/shared/Loader';\r\nimport {getUserDetails,updateUserProfile} from '../actions/userAction';\r\nimport FormContainer from '../components/shared/FormContainer';\r\nimport { listMyOrders } from '../actions/orderAction';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\n\r\n\r\nconst ProfileScreen = ({location,history}) => {\r\n    const [name,setName] = useState('');\r\n    const [email,setEmail] = useState('');\r\n    const [password,setPassword] = useState('');\r\n    const [confirmPassword,setConfirmPassword] = useState('');\r\n    const [message,setMessage] = useState('')\r\n\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n    const userDetails= useSelector(state => state.userDetails)\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {loading,error,user} = userDetails\r\n    const {userInfo} = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state=>state.userUpdateProfile)\r\n    const {success} = userUpdateProfile\r\n\r\n    const orderListMy = useSelector((state)=>state.orderListMy)\r\n    const {loading:loadingMyOrders,orders,error:errorOrders} = orderListMy\r\n\r\n    useEffect(()=>{\r\n      if(!userInfo){\r\n        history.push(\"/login\")\r\n      }else{\r\n        if(!user.name){\r\n            dispatch(getUserDetails('profile'))\r\n            dispatch(listMyOrders())\r\n        }else{\r\n            setName(user.name)\r\n            setEmail(user.email)\r\n        }\r\n      }\r\n    },[history,userInfo,user,dispatch])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        // dispatch\r\n        dispatch(updateUserProfile({id:user._id,name,email,password}))\r\n    }\r\n  return (\r\n    <>\r\n   <Row>\r\n    <Col md={4}>\r\n    <FormContainer>\r\n        <h1>Update Information</h1>\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {success && <Message variant=\"success\">Profile Updated</Message>}\r\n        {loading && <Loader/>}\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"enter name\" value={name} onChange={(e)=>setName(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='email'>\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"enter email\" value={email} onChange={(e)=>setEmail(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='password'>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"enter password\" value={password} onChange={(e)=>setPassword(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='confirmPassword'>\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Re-enter password\" value={confirmPassword} onChange={(e)=>setConfirmPassword(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n            <Button type=\"submit\" variant=\"primary\">Update</Button>\r\n        </Form>\r\n    </FormContainer>\r\n    </Col>\r\n    <Col md={8}>\r\n        <h1>My Orders</h1>\r\n        {\r\n            loadingMyOrders ? <Loader/>\r\n            :errorOrders ? <Message variant=\"danger\">{errorOrders}</Message>\r\n            :(\r\n                <Table striped bordered hover responsive className=\"table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            orders.map((order)=>(\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0,10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0,10):(\r\n                                        <i className='fas fa-times' style={{color:'red'}}></i>\r\n                                    )}</td>\r\n                                    <td>{order.isDeleverd ? order.deleverdAt.substring(0,10):(\r\n                                        <i className='fas fa-times' style={{color:'red'}}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button variant=\"light\">Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            )\r\n        }\r\n    </Col>\r\n   </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen;","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\screens\\ShippingScreen.jsx",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\components\\shared\\CheckoutStep.jsx",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\screens\\PaymentScreen.jsx",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\reducers\\orderReducer.js",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\constants\\orderConstant.js",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\screens\\PlaceOrderScreen.jsx",["149"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Button,Row,Col,ListGroup,Image,Card} from 'react-bootstrap';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport Message from '../components/shared/Message';\r\nimport CheckOutStep from \"../components/shared/CheckoutStep\";\r\nimport { createOrder } from '../actions/orderAction';\r\nimport { useEffect } from 'react';\r\n\r\nconst PlaceOrderScreen = ({history}) => {\r\n    const cart = useSelector((state)=>state.cart)\r\n    const dispatch = useDispatch()\r\n    const orderCreate = useSelector(state=>state.orderCreate)\r\n    const {order,success,error} = orderCreate\r\n\r\n    //fun for decimal\r\n    const addDecimal = (num) => {\r\n        return (Math.round(num*100)/100).toFixed(2)\r\n    }\r\n    cart.itemsPrice = addDecimal(cart.cartItems.reduce((acc,item)=>acc+item.price*item.qty,0))\r\n    cart.shippingPrice=addDecimal(cart.cartItems>500?0:50)\r\n    cart.taxPrice = addDecimal(Number((0.15*cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = Number(cart.itemsPrice)+Number(cart.shippingPrice)+Number(cart.taxPrice)\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(\r\n            createOrder({\r\n                orderItems:cart.cartItems,\r\n                shippingAddress:cart.shippingAddress,\r\n                paymentMethod:cart.paymentMethod,\r\n                itemsPrice:cart.itemsPrice,\r\n                shippingPrice:cart.shippingPrice,\r\n                taxPrice:cart.taxPrice,\r\n                totalPrice:cart.totalPrice\r\n            })\r\n        )\r\n    }\r\n    useEffect(()=>{\r\n        if(success){\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n    },[history,success])\r\n  return (\r\n    <>\r\n    <CheckOutStep step1 step2 step3 step4/>\r\n    <Row>\r\n        <Col md={8}>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h2>Shipping</h2>\r\n                    <p>\r\n                    <strong>Address :</strong>\r\n                    {cart.shippingAddress.address}&nbsp;\r\n                    {cart.shippingAddress.city}&nbsp;\r\n                    {cart.shippingAddress.postalCode}&nbsp;\r\n                    {cart.shippingAddress.country}&nbsp;\r\n                    </p>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <p>\r\n                        <strong>{cart.paymentMethod}</strong>\r\n                    </p>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    {cart.cartItems.length ===0 ? \r\n                    <Message>Your Cart is Empty</Message>\r\n                    :(\r\n                        <ListGroup variant=\"flush\">\r\n                            {\r\n                                cart.cartItems.map((item,index)=>(\r\n                                    <ListGroup.Item key={index}>\r\n                                        <Row>\r\n                                            <Col md={1}>\r\n                                                <Image src={item.image} alt={item.name} fluid/>\r\n                                            </Col>\r\n                                            <Col>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                                {item.qty} X ₹{item.price} = ₹ {item.price}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                ))\r\n                            }\r\n                        </ListGroup>\r\n                    )\r\n                    }\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n            <Card>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>Order Summary</h2>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Items</Col>\r\n                            <Col>${cart.itemsPrice}</Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>Shipping</Col>\r\n                            <Col>${cart.shippingPrice}</Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>Tax</Col>\r\n                            <Col>${cart.taxPrice}</Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>Total</Col>\r\n                            <Col>${cart.totalPrice}</Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        {error && <Message variant=\"danger\">{error}</Message> }\r\n                    </ListGroup.Item>\r\n                    <Button type=\"button\" className='btn-block' disabled={cart.cartItems===0} onClick={placeOrderHandler}>Place Order</Button>\r\n                </ListGroup>\r\n            </Card>\r\n        </Col>\r\n    </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\actions\\orderAction.js",[],"D:\\Backend Practice In this Folder\\MERN STACK AMAZON CLONE\\frontend\\src\\screens\\OrderScreen.jsx",["150"],"import React,{ useEffect } from 'react';\r\nimport {PayPalButton} from 'react-paypal-button-v2'\r\nimport {Link} from 'react-router-dom';\r\nimport {Button,Row,Col,ListGroup,Image,Card} from 'react-bootstrap';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport Message from '../components/shared/Message';\r\nimport Loader from '../components/shared/Loader';\r\nimport { getOrderDetails, payOrder } from '../actions/orderAction';\r\nimport axios from 'axios';\r\nimport { useState } from 'react';\r\nimport { ORDER_PAY_RESET } from '../constants/orderConstant';\r\n\r\n\r\nconst OrderScreen = ({match}) => {\r\n    const orderId = match.params.id\r\n    const [sdkReady,setSdkReady] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const {loading:loadingPay,success:successpay} = orderPay\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const {order,loading,error} = orderDetails\r\n\r\n    if(!loading){\r\n        //calculate price\r\n        const addDecimal = (num) => {\r\n            return (Math.round(num*100)/100).toFixed(2)\r\n        }\r\n        order.itemsPrice = addDecimal(order.orderItems.reduce((acc,item)=>acc+item.price*item.qty,0))\r\n    }\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId,paymentResult))\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const addPaypalScript = async () => {\r\n            const {data: clientId} = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = \"text/javascript\"\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n        if(!order || successpay){\r\n            dispatch(getOrderDetails(orderId))\r\n            dispatch({type:ORDER_PAY_RESET})\r\n        }else if(!order.isPaid){\r\n            if(!window.paypal){\r\n                addPaypalScript()\r\n            }else{\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    },[dispatch,orderId,order,successpay])\r\n  return loading ? <Loader/>\r\n  : error ? <Message variant=\"danger\">{error}</Message>\r\n  :<>\r\n  <h2>Order {order._id}</h2>\r\n  <Row>\r\n    <Col md={8}>\r\n        <ListGroup variant='flush'>\r\n        <ListGroup.Item >\r\n            <h2>Shipping</h2>\r\n            <p><strong>Name : </strong> {order.user.name}</p>\r\n            <p><strong>Email : </strong> {order.user.email}</p>\r\n            <p>\r\n                <strong>Address :</strong>\r\n                {order.shippingAddress.address}&nbsp;\r\n                {order.shippingAddress.city}&nbsp;\r\n                {order.shippingAddress.postalCode}&nbsp;\r\n                {order.shippingAddress.country}&nbsp;\r\n            </p>\r\n            {\r\n                order.isDeliverd ? <Message variant=\"success\">Paid On {order.isDeliverd}</Message>\r\n                :<Message variant=\"danger\">Not Deliverd</Message>\r\n            }\r\n        </ListGroup.Item>\r\n        <ListGroup.Item>\r\n            <h2>Payment Method</h2>\r\n            <p>\r\n                <strong>Method :</strong>\r\n                <strong>{order.paymentMethod}</strong>\r\n            </p>\r\n            {\r\n                order.isPaid ? <Message variant=\"success\">Paid On {order.paidAt}</Message>\r\n                :<Message variant=\"danger\">Not Paid</Message>\r\n            }\r\n        </ListGroup.Item>\r\n        <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    {order.orderItems.length ===0 ? \r\n                    <Message>Your Cart is Empty</Message>\r\n                    :(\r\n                        <ListGroup variant=\"flush\">\r\n                            {\r\n                                order.orderItems.map((item,index)=>(\r\n                                    <ListGroup.Item key={index}>\r\n                                        <Row>\r\n                                            <Col md={1}>\r\n                                                <Image src={item.image} alt={item.name} fluid/>\r\n                                            </Col>\r\n                                            <Col>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                                {item.qty} X ₹{item.price} = ₹ {item.price}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                ))\r\n                            }\r\n                        </ListGroup>\r\n                    )\r\n                    }\r\n                </ListGroup.Item>\r\n        </ListGroup>\r\n    </Col>\r\n    <Col md={4}>\r\n    <Card>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>Order Summary</h2>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Items</Col>\r\n                            <Col>${order.itemsPrice}</Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>Shipping</Col>\r\n                            <Col>${order.shippingPrice}</Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>Tax</Col>\r\n                            <Col>${order.taxPrice}</Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>Total</Col>\r\n                            <Col>${order.totalPrice}</Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        {error && <Message variant=\"danger\">{error}</Message> }\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Card>\r\n        {\r\n            !order.isPaid && (<ListGroup.Item>\r\n                {loadingPay && <Loader/>}\r\n                {!sdkReady ? (<Loader/>):(\r\n                    <PayPalButton \r\n                    amount={order.totalPrice}\r\n                    onSuccess = {successPaymentHandler}\r\n                    />\r\n                )}\r\n            </ListGroup.Item>)\r\n        }\r\n    </Col>\r\n  </Row>\r\n  </>\r\n}\r\n\r\nexport default OrderScreen\r\n",{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"151","replacedBy":"155"},{"ruleId":"153","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":2,"column":9,"nodeType":"159","messageId":"160","endLine":2,"endColumn":13},{"ruleId":"157","severity":1,"message":"161","line":18,"column":20,"nodeType":"159","messageId":"160","endLine":18,"endColumn":30},{"ruleId":"162","severity":1,"message":"163","line":42,"column":7,"nodeType":"164","endLine":42,"endColumn":24,"suggestions":"165"},{"ruleId":"157","severity":1,"message":"166","line":4,"column":9,"nodeType":"159","messageId":"160","endLine":4,"endColumn":15},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],["167"],["168"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'setMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.","ArrayExpression",["169"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},"Update the dependencies array to be: [history, order._id, success]",{"range":"172","text":"173"},[1649,1666],"[history, order._id, success]"]